{"version":3,"sources":["components/datepicker/Datepicker.js","components/graphs/Graph.js","components/switchandrandomize/SwitchandRandomize.js","components/tables/Table.js","components/main/Main.js","App.js","index.js"],"names":["Datepicker","handleNewData","useState","startingDate","setStartingDate","endingDate","setEndingDate","graphData","setGraphData","endDate","useRef","useEffect","handleFormSubmit","e","preventDefault","selectedDates","arr","arrSize","start","firstDate","toLocaleDateString","push","i","addDays","populateDates","end","diffTime","Math","abs","ceil","countDays","dates","values","data","today","Date","includesToday","includes","indexOf","findToday","length","date","posValue","p","negValue","diff","obj","x","randomValues","generateRandomValues","j","map","filter","res","createRandomData","floor","random","prototype","days","sd","setDate","getDate","className","id","htmlFor","type","ref","startDate","name","onChange","target","value","max","todaysDate","toISOString","slice","getMinDate","min","getMaxDate","onClick","disabled","style","cursor","opacity","Graph","currentproduct","graphdata","ComposedChart","width","height","margin","top","right","bottom","left","Legend","Line","dataKey","stroke","strokeWidth","ReferenceLine","label","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","SwitchandRandomize","props","displayin","handleDisplay","handleProductSelector","backgroundColor","color","vlaue","Table","product1","setProduct1","product2","setProduct2","productA","prod0_posValue","undefined","prod0_negValue","prod0_diff","getProduct1Details","productB","prod1_posValue","prod1_negValue","prod1_diff","getProduct2Details","colSpan","index","Main","setData","setDisplayIn","setCurrentProduct","status","product","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79a5a2b0.chunk.js","sourcesContent":["import React,{useRef,useState,useEffect} from 'react'\r\n\r\n\r\nconst Datepicker = ({handleNewData}) => {\r\n    const [startingDate,setStartingDate] = useState('')\r\n    const [endingDate,setEndingDate] = useState('')\r\n    const [graphData,setGraphData] = useState([])\r\n    let startDate, endDate = useRef()\r\n   \r\n    useEffect(()=>{\r\n        setGraphData(graphData)\r\n    },[graphData])\r\n    const getMinDate =()=>{\r\n        let todaysDate = new Date()\r\n        todaysDate.setDate(todaysDate.getDate() - 2)\r\n        return todaysDate.toISOString().slice(0,10)\r\n        \r\n    }\r\n    const getMaxDate =()=>{\r\n        let todaysDate = new Date()\r\n        todaysDate.setDate(todaysDate.getDate() + 2)\r\n        \r\n        return todaysDate.toISOString().slice(0,10)\r\n    }\r\n    const handlesdChange =(e)=>{\r\n        setStartingDate(new Date(e.target.value))\r\n    }\r\n\r\n    const handleedChange =(e)=>{\r\n        setEndingDate(new Date(e.target.value))\r\n    }\r\n\r\n    const handleFormSubmit =(e)=>{\r\n        e.preventDefault()\r\n        let dateArr = [];\r\n        \r\n        let noOfDaysSelected = countDays(startingDate,endingDate)\r\n        let selectedDates = populateDates(dateArr,noOfDaysSelected,startingDate)\r\n        setGraphData(createRandomData(selectedDates,generateRandomValues(selectedDates.length)))\r\n        handleNewData(graphData)\r\n        \r\n    }\r\n    // eslint-disable-next-line no-extend-native\r\n    Date.prototype.addDays = function addDays(days){\r\n    let sd = new Date(startingDate)\r\n    sd.setDate(sd.getDate() + days)\r\n    return sd.toLocaleDateString()\r\n    }\r\n    function countDays(start,end){\r\n        let diffTime = Math.abs(end - start);\r\n        let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        return diffDays;\r\n    }\r\n    function populateDates(arr,arrSize,start){\r\n        let firstDate = start.toLocaleDateString()\r\n        arr.push(firstDate)\r\n        for(let i=1;i<=arrSize;i++){\r\n            if(arr[i]){\r\n                arr.push(start)\r\n            }\r\n            arr.push(start.addDays(i))\r\n\r\n        }\r\n    return arr\r\n    }\r\n    // creates random values for resp dates\r\n    function generateRandomValues(length){\r\n        let randomValues = []\r\n        for(let i=0;i<length;i++){\r\n            randomValues.push(Math.floor(Math.random() * 100) + 10)\r\n        }\r\n        return randomValues\r\n    }\r\n    // lookup for todays date in dates array\r\n    function findToday(arr,today){\r\n        if(arr.includes(today)){\r\n            return arr.indexOf(today)\r\n        }\r\n\r\n        return false\r\n    }\r\n    // creates graph data\r\n    function createRandomData(dates,values){\r\n    let data = []\r\n    \r\n    let today = new Date().toLocaleDateString()\r\n    let includesToday = findToday(dates,today)\r\n    if(includesToday === false){\r\n        \r\n            for(let i=0;i<dates.length;i++){\r\n                if(dates[i] === today){\r\n                    data.push({date:'today',posValue: values[i]})\r\n                    i++\r\n                }\r\n                data.push({date:dates[i],posValue: values[i]})\r\n                \r\n            }\r\n            \r\n    } else{\r\n            for(let p=0;p<1;p++){\r\n                let posValue = `prod${p}_posValue`\r\n                let negValue = `prod${p}_negValue`\r\n                let diff = `prod${p}_diff`\r\n                for(let i=0;i<dates.length;i++){\r\n                    \r\n                    if(i < includesToday){\r\n                        let obj = {\r\n                        date: dates[i]\r\n                        }\r\n                        obj[posValue] = values[i]\r\n                        data.push(obj)\r\n                    }\r\n                    \r\n                    if(dates[i] === today){\r\n                        let obj = {\r\n                        date: 'today'\r\n                        }\r\n                        obj[posValue] = values[i]\r\n                        obj[negValue] = values[i]\r\n                        obj[diff] = values[i]\r\n                        data.push(obj)\r\n                        i++\r\n                        \r\n                    }\r\n                    if(i > includesToday){\r\n                        let obj = {\r\n                        date: dates[i]\r\n                        \r\n                        }\r\n                        // console.log(i);\r\n                        obj[posValue] = data[i-1][`prod${p}_posValue`] + 5\r\n                        obj[negValue] = (data[i-1][`prod${p}_negValue`] - 5 < 0 ? 0 : data[i-1][`prod${p}_negValue`] - 5 )\r\n                        obj[diff] = data[i-1][`prod${p}_posValue`] + 5 \r\n                        data.push(obj)\r\n       \r\n                    }\r\n        \r\n                }   \r\n            }\r\n            for(let x=0;x<1;x++){\r\n                let posValue = `prod${x+1}_posValue`\r\n                let negValue = `prod${x+1}_negValue`\r\n                let diff = `prod${x+1}_diff`\r\n                let randomValues = generateRandomValues(dates.length)\r\n                for(let j=0;j<dates.length;j++){\r\n                    \r\n                    if(j < includesToday){\r\n                        let res  = data.map(x => x).filter(data => data.date === dates[j])\r\n                        res[0][posValue] = randomValues[j]\r\n                    }\r\n                    \r\n                    if(dates[j] === today){\r\n                        let res  = data.map(x => x).filter(data => data.date === 'today')\r\n                        res[0][posValue] = randomValues[j]\r\n                        res[0][negValue] = randomValues[j]\r\n                        res[0][diff] = randomValues[j]\r\n                        \r\n                    }\r\n                    if(j > includesToday){\r\n                        let res  = data.map(x => x).filter(data => data.date === dates[j])\r\n                        \r\n                        res[0][posValue] = data[j-1][`prod${x+1}_posValue`] + 5\r\n                        res[0][negValue] = (data[j-1][`prod${x+1}_negValue`] - 5 < 0 ? 0 : data[j-1][`prod${x+1}_negValue`] - 5 )\r\n                        res[0][diff] = data[j-1][`prod${x+1}_posValue`] + 5 \r\n       \r\n                    }\r\n        \r\n                }   \r\n            }\r\n               \r\n    }\r\n    \r\n    return data\r\n    }\r\n\r\n    return (\r\n        <div className=\"data-picker\">\r\n             <h3>Date Range</h3>\r\n             <form id=\"date-form\">\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"start-date\">Start Date A</label>\r\n                <input type=\"date\" ref={startDate} name=\"startDate\" onChange={handlesdChange}id=\"start-date\" max={getMinDate()}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"end-date\">End Date B</label>\r\n                <input type=\"date\" ref={endDate} name=\"endDate\" onChange={handleedChange} id=\"end-date\" min={getMaxDate()}/>\r\n                </div>\r\n                {(startingDate === '' || endingDate === '' ) ?\r\n                <input type=\"submit\" value=\"Submit\" onClick={handleFormSubmit} disabled style={{cursor:'not-allowed' ,opacity: '0.5'}}/>\r\n                :\r\n                <input type=\"submit\" value=\"Submit\" onClick={handleFormSubmit} />\r\n                }\r\n                \r\n            </form>\r\n            <div className=\"randomize-btn-container\">\r\n            {(graphData.length === 0) ?\r\n            <input type=\"button\" className=\"randomize-btn\" value=\"randomize\" disabled style={{cursor:'not-allowed'}}/>\r\n            :\r\n            <input type=\"button\" className=\"randomize-btn\" onClick={handleFormSubmit} value=\"randomize\" />\r\n            }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Datepicker\r\n","import {ComposedChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip,ReferenceLine } from 'recharts';\r\nimport React,{useState,useEffect} from 'react'\r\n\r\nconst Graph = ({data,currentproduct}) => {\r\n    const [graphdata,setGraphData] = useState(data)\r\n    useEffect(() => {\r\n        setGraphData(data)\r\n        return () => {\r\n            setGraphData([])\r\n        }\r\n    }, [data])\r\n    return (\r\n        <div>\r\n            {(currentproduct === 'product1&2') ?\r\n            <ComposedChart  data={graphdata} width={600} height={500} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"prod0_posValue\" stroke=\"#8884d8\" strokeWidth={2}/>\r\n            <Line type=\"monotone\" dataKey=\"prod0_negValue\" stroke=\"#e228e8\" strokeWidth={2} />\r\n            <Line type=\"monotone\" dataKey=\"prod1_posValue\" stroke=\"#3fc438\" strokeWidth={2}/>\r\n            <Line type=\"monotone\" dataKey=\"prod1_negValue\" stroke=\"#e8285b\" strokeWidth={2}/>\r\n            <ReferenceLine x=\"today\" stroke=\"orange\" label=\"Today\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            </ComposedChart>\r\n            : \r\n            (currentproduct === 'product1') ?\r\n            <ComposedChart  data={data} width={600} height={500} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"prod0_posValue\" stroke=\"#8884d8\" strokeWidth={2}/>\r\n            <Line type=\"monotone\" dataKey=\"prod0_negValue\" stroke=\"#e228e8\" strokeWidth={2} />\r\n            <ReferenceLine x=\"today\" stroke=\"orange\" label=\"Today\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            </ComposedChart>\r\n            :\r\n            <ComposedChart  data={data} width={600} height={500} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"prod1_posValue\" stroke=\"#3fc438\" strokeWidth={2}/>\r\n            <Line type=\"monotone\" dataKey=\"prod1_negValue\" stroke=\"#e8285b\" strokeWidth={2}/>\r\n            <ReferenceLine x=\"today\" stroke=\"orange\" label=\"Today\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            </ComposedChart>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React from 'react'\r\n\r\nconst SwitchandRandomize = (props) => {\r\n    let {displayin,\r\n        currentproduct,\r\n        handleDisplay,\r\n        handleProductSelector} = props\r\n    \r\n    const handleSelector =(e)=>{\r\n        handleProductSelector(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"sw-rd-container\">\r\n            <div className=\"switch-btn-container\">\r\n                {/*btn to show graph  */}\r\n                <label htmlFor=\"switchdata\">show data in:</label>\r\n                {(displayin === 'graph') ? \r\n                <input type=\"button\" className=\"show-graph-btn\" value=\"graph\" disabled style={{cursor:'not-allowed'}}/>\r\n                :\r\n                <input type=\"button\" className=\"show-graph-btn\" onClick={ () =>handleDisplay('graph')} value=\"graph\" style={{backgroundColor:'#333',color:'#fff'}}/>\r\n                }\r\n                {/* btn to show table */}\r\n                \r\n                {(displayin === 'table') ?\r\n                <input type=\"button\" className=\"show-table-btn\" value=\"table\" disabled style={{cursor:'not-allowed'}}/>\r\n                :\r\n                <input type=\"button\" className=\"show-table-btn\" onClick={() => handleDisplay('table')} value=\"table\" style={{backgroundColor:'#333',color:'#fff'}}/>\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"select-product-container\">\r\n            <label htmlFor=\"product\">product: </label>\r\n                <select name=\"select-product\" id=\"select-product\" onChange={handleSelector} vlaue={currentproduct}>\r\n                    <option value=\"product1&2\">Product 1 & 2</option>\r\n                    <option value=\"product1\" style={{color:'#8884d8'}}>Product 1</option>\r\n                    <option value=\"product2\" style={{color:'#3fc438'}}>Product 2</option>\r\n                </select>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwitchandRandomize\r\n","import React,{useState,useEffect} from 'react'\r\n\r\nconst Table = ({data}) => {\r\n    const[product1,setProduct1] = useState(null)\r\n    const[product2,setProduct2] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        if(data !== null){\r\n            setProduct1(getProduct1Details(data))\r\n            setProduct2(getProduct2Details(data))\r\n        }\r\n    },[data])\r\n    function getProduct1Details(graphData){\r\n        let productA =[]\r\n        for(let i=0;i<graphData.length;i++){\r\n            let obj ={}\r\n            obj['date'] = graphData[i].date\r\n            obj['prod0_posValue'] = graphData[i].prod0_posValue\r\n            if(graphData[i].prod0_negValue === undefined){\r\n                obj['prod0_negValue'] = 'N/A'\r\n            }else{\r\n                obj['prod0_negValue'] = graphData[i].prod0_negValue\r\n            }\r\n            if(graphData[i].prod0_diff === undefined){\r\n                obj['prod0_diff'] = 'N/A'\r\n            }else{\r\n                obj['prod0_diff'] = graphData[i].prod0_diff\r\n            }\r\n            productA.push(obj)\r\n        }\r\n        return productA\r\n    }\r\n    \r\n    function getProduct2Details(graphData){\r\n        let productB =[]\r\n        for(let i=0;i<graphData.length;i++){\r\n            let obj ={}\r\n            obj['date'] = graphData[i].date\r\n            obj['prod1_posValue'] = graphData[i].prod1_posValue\r\n            if(graphData[i].prod1_negValue === undefined){\r\n                obj['prod1_negValue'] = 'N/A'\r\n            }else{\r\n                obj['prod1_negValue'] = graphData[i].prod1_negValue\r\n            }\r\n            if(graphData[i].prod1_diff === undefined){\r\n                obj['prod1_diff'] = 'N/A'\r\n            }else{\r\n                obj['prod1_diff'] = graphData[i].prod1_diff\r\n            }\r\n            productB.push(obj)\r\n        }\r\n        return productB\r\n    }\r\n    return (\r\n        <div className=\"table-container\">\r\n        <table id=\"data-table\">\r\n            <thead>\r\n            <tr><th>Date</th><th>Product</th><th>Up Value</th><th>Down Value</th></tr>\r\n            </thead>\r\n            {(data === null) ?\r\n            <tbody>\r\n                <tr>\r\n                    <td colSpan='4'>No data To show</td>            \r\n                </tr>\r\n            </tbody>\r\n            :\r\n            <tbody>\r\n                \r\n                {product1 && product1.map((x,index) => {\r\n                    return <tr key={index}>\r\n                                <td>{x.date}</td>\r\n                                <td>Product 1</td>\r\n                                <td>{x.prod0_posValue}</td>\r\n                                <td>{x.prod0_negValue}</td>\r\n                            </tr>\r\n                })}\r\n                {product2 && product2.map((x,index) => {\r\n                    return <tr key={index}>\r\n                                <td>{x.date}</td>\r\n                                <td>Product 2</td>\r\n                                <td>{x.prod1_posValue}</td>\r\n                                <td>{x.prod1_negValue}</td>\r\n                            </tr>\r\n                })}\r\n                </tbody> \r\n            }\r\n                \r\n            </table>\r\n        </div>\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React,{useState} from 'react'\r\nimport Datepicker from '../datepicker/Datepicker'\r\nimport Graph from '../graphs/Graph'\r\nimport SwitchandRandomize from '../switchandrandomize/SwitchandRandomize'\r\nimport Table from '../tables/Table'\r\n\r\nconst Main = () => {\r\n    const [data,setData] = useState(null)\r\n    const [displayin,setDisplayIn]=useState('graph')\r\n    const [currentproduct,setCurrentProduct] = useState('product1&2')\r\n\r\n    const handleNewData =(data)=>{\r\n        setData(data)\r\n    }\r\n    const handleDisplay =(status)=>{\r\n        \r\n        setDisplayIn(status)\r\n    }\r\n    const handleProductSelector =(product)=>{\r\n        setCurrentProduct(product)\r\n    }\r\n    return (\r\n        <div className='mains'>\r\n            <div className=\"dynamic-showcase\">\r\n            \r\n                <div className=\"graph-and-table\">\r\n                    {(displayin === 'graph') ?\r\n                    <Graph data={data} currentproduct={currentproduct}/>\r\n                    :\r\n                    <Table data={data}/>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"switch-and-select\">\r\n                    <SwitchandRandomize \r\n                    displayin={displayin}\r\n                    currentproduct={currentproduct} \r\n                    handleDisplay={handleDisplay}\r\n                    handleProductSelector={handleProductSelector}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"date-selectors\">\r\n                <Datepicker handleNewData={handleNewData}/>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\nimport Main from './components/main/Main';\n\nconst App = () => <Main/>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}